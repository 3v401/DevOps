node {
	stage('Git checkout'){
		git 'https://github.com/.../DevOps.git'
	}
	stage('Sending Docker file to Ansible server over ssh'){
		sshagent(['ansible_demo']){
			sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP>'
			sh 'scp /var/lib/jenkins/workspace/pipeline-demo/* <USERNAME>@<PUBLIC_IP>:/home/<USERNAME>'
		}
	}
	stage('Docker build image'){
		sshagent(['ansible_demo'])}
			sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP> cd /home/<USERNAME>/'
			sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP> docker imge build -t $JOB_NAME:v1.$BUILD_ID .'
		}
	}
	stage('Docker image tagging'){
		sshagent(['ansible_demo']){
			sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP> cd /home/<USERNAME>/'
			sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP> docker image tag @JOB_NAME:v1.$BUILD_ID <DOCKERHUB_USERNAME>/$JOB_NAME:latest'
		}
	}
	stage('Push Docker image to DockerHub'){
		sshagent([]){
			withCredentials([String(CredentialsId: '', variable '')]){
				sh "ssh -o StrictHostKeyCheking=no <USERNAME>@<PUBLIC_IP> docker login -u <USERNAME> -p ${<PASSWORD_VARIABLE>}"
				sh 'ssh -o StrictHostKeyChecking=no <USERNAME>@<PUBLIC_IP> docker image push <DOCKERHUB_USERNAME>/$JOB_NAME:latest ''
			}
		}
	}
}
